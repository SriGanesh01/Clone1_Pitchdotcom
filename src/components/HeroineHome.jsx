import { useState } from "react";
import p1 from "../assets/p1.png";
import p2 from "../assets/p2.png";
import p3 from "../assets/p3.png";
import p4 from "../assets/p4.png";

function HeroineHome() {
	const [imageSrc, setImageSrc] = useState(p1);
	const [selected, setSelected] = useState(p1);

	const handleNavClick = (image) => {
		setImageSrc(image);
		setSelected(image);
	};

	return (
		<div className="h-screen text-white text-center font-sans font-semibold overflow-hidden ">
			<div className="w-[150%] h-2/3 
				bg-[linear-gradient(to_right,#5318ec_0%,#5318ec_12.5%,#a366ef_76%,#a366ef_100%)] 
				absolute translate-x-[-12.5%] rounded-b-[80%] overflow-hidden z-[-1]">
			</div>


			<div className="w-[120%] h-2/3 bg-gradient-to-r from-[#330f8f] to-[#4c2f6f] opacity-40 absolute translate-x-[-5%] translate-y-[25%] rounded-b-[80%] overflow-hidden z-[-1] brightness-200 blur-2xl"></div>


			<div className="z-40">
				<nav className="flex justify-center space-x-4 p-4 gap-x-20 font-sans">
					<button onClick={() => handleNavClick(p1)} className={`hover:underline ${selected === p1 ? "underline" : ""} flex flex-row items-center gap-x-2`}>
						<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
							<path id="Shape" fill-rule="evenodd" clip-rule="evenodd"
								d="M19.7978 5.58321C19.8422 4.83547 19.2234 4.21684 18.4757 4.26133L18.3189 4.27066C15.8735 4.41616 
								13.5569 5.39191 11.7478 7.02765L8.32184 7.05367C7.99361 7.05616 7.67954 7.18765 7.44745 7.41975L4.60478 
								10.2624C3.81329 11.0539 4.38121 12.4068 5.50051 12.3962L7.67486 12.3756C7.69298 12.3971 7.71213 12.4179 
								7.73233 12.4381L11.6214 16.3272C11.6323 16.338 11.6433 16.3486 11.6545 16.3588L11.6339 18.5298C11.6233 
								19.6491 12.9762 20.217 13.7677 19.4255L16.6104 16.5828C16.8425 16.3507 16.974 16.0367 16.9765 15.7084L17.002 
								12.3446C18.6558 10.5304 19.6424 8.20026 19.7885 5.73986L19.7978 5.58321ZM13.156 16.2068L15.4904 13.8725L15.4773 
								15.5946L13.1396 17.9323L13.156 16.2068ZM15.6199 11.6215C17.1779 10.0531 18.122 7.97917 18.2828 5.77631C16.07 5.93808 
								13.9874 6.89013 12.4166 8.46095L9.14655 11.731L12.3285 14.913L15.6199 11.6215ZM6.09801 10.8905L7.8235 10.8742L10.1579 
								8.53977L8.43567 8.55285L6.09801 10.8905ZM6.63248 17.4158C6.8317 17.3919 7.04659 17.3605 7.25532 17.3196C7.48104 17.2754 
								7.68136 17.2234 7.83886 17.1654C7.99313 17.1086 8.05232 17.0653 8.06078 17.0591L8.06165 17.0585C8.06191 17.0583 8.06193 
								17.0583 8.06173 17.0585C8.31964 16.8006 8.34116 16.3504 8.02516 16.0344C7.68991 15.6992 7.21133 15.729 6.97175 15.9685C6.97275 
								15.9676 6.97246 15.968 6.97105 15.97C6.9634 15.9812 6.92261 16.0405 6.87017 16.1878C6.81365 16.3467 6.76377 16.5493 6.72202 
								16.7781C6.68302 16.9919 6.65398 17.2121 6.63248 17.4158ZM6.14063 18.9682C5.54753 19.0092 5.05422 18.5238 5.08707 
								17.9292C5.10457 17.6125 5.14672 17.0552 5.24638 16.5089C5.29612 16.2363 5.36348 15.9477 5.457 15.6849C5.5449 
								15.4379 5.68199 15.137 5.91109 14.9079C6.80271 14.0163 8.23331 14.1213 9.08582 14.9738C9.95759 15.8455 9.99566 
								17.2459 9.12239 18.1192C8.89678 18.3448 8.60163 18.483 8.3572 18.573C8.09777 18.6686 7.81302 18.7388 7.54383 
								18.7916C7.00452 18.8973 6.45459 18.9465 6.14063 18.9682ZM14.1329 9.92658C14.6211 10.4147 15.4125 10.4147 15.9007 
								9.92658C16.3889 9.43842 16.3889 8.64697 15.9007 8.15881C15.4125 7.67066 14.6211 7.67066 14.1329 8.15881C13.6448 
								8.64697 13.6448 9.43842 14.1329 9.92658Z">
							</path>
						</svg>
						PITCH
					</button>
					<button onClick={() => handleNavClick(p2)} className={`hover:underline ${selected === p2 ? "underline" : ""} flex flex-row items-center gap-x-2`}>
						<svg width="25" height="24" viewBox="0 0 25 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
							<path id="Shape" fill-rule="evenodd" clip-rule="evenodd"
								d="M8.57313 5.48777C8.67076 5.39014 8.82906 5.39014 8.92669 5.48777L9.8142 6.37529L8.71949 7.47001C8.42659 
								7.7629 8.42659 8.23777 8.71949 8.53067C9.01238 8.82356 9.48725 8.82356 9.78015 8.53067L10.8749 7.43595L11.8622 
								8.42333C11.1936 8.98788 10.5463 9.59113 9.95307 10.2234C9.58019 10.6208 9.23835 11.0093 8.94031 11.3801L5.98735 
								8.42711C5.88972 8.32948 5.88972 8.17119 5.98735 8.07356L8.57313 5.48777ZM8.07216 12.6332L4.92669 9.48777C4.24327 
								8.80436 4.24327 7.69632 4.92669 7.0129L7.51247 4.42711C8.19589 3.7437 9.30393 3.7437 9.98735 4.42711L13.0416 
								7.48135C14.0268 6.73577 15.0167 6.08262 15.9125 5.55115C16.8517 4.99401 17.7057 4.55966 18.3613 4.28931C18.6846 
								4.15601 18.9867 4.05124 19.2392 3.99715C19.3618 3.97089 19.5119 3.94777 19.6647 3.9553C19.7825 3.9611 20.1092 
								3.99355 20.3388 4.28467C20.5206 4.51506 20.5322 4.77395 20.5325 4.8817C20.533 5.01969 20.5113 5.15746 20.4851 
								5.27846C20.4318 5.52443 20.3338 5.81655 20.208 6.13153C19.9538 6.76813 19.5492 7.58894 19.0246 8.49409C18.4885 
								9.41898 17.8175 10.4487 17.0367 11.4764L20.0731 14.5129C20.7565 15.1963 20.7566 16.3044 20.0731 16.9878L17.4873 
								19.5736C16.8039 20.257 15.6959 20.257 15.0125 19.5736L11.8664 16.4275C11.7623 16.4849 11.6594 16.5371 11.5579 
								16.5834C11.4696 17.4359 11.0163 18.1584 10.4969 18.6778C10.1181 19.0566 9.51662 19.4013 8.92038 19.6767C8.30455 
								19.9611 7.61041 20.2095 6.98383 20.3688C6.67052 20.4484 6.3614 20.509 6.07913 20.5384C5.81114 20.5664 5.50712 
								20.5732 5.23356 20.5031C4.96194 20.4335 4.51581 20.2199 4.42402 19.6816C4.35109 19.2538 4.56704 18.8826 4.73273 
								18.6525C5.13295 18.0965 5.12344 17.487 5.07278 16.6469L5.06587 16.5363C5.01943 15.8058 4.95152 14.7379 5.75431 
								13.9351C6.27695 13.4125 7.00544 12.9567 7.86504 12.8725C7.89393 12.8697 7.92284 12.8673 7.95177 12.8653C7.98879 
								12.7886 8.02904 12.7112 8.07216 12.6332ZM13.1214 15.5612L16.0731 18.5129C16.1708 18.6105 16.3291 18.6105 16.4267 
								18.5129L19.0125 15.9271C19.1101 15.8295 19.1101 15.6712 19.0125 15.5736L18.1249 14.686L17.0301 15.7807C16.7373 
								16.0736 16.2624 16.0736 15.9695 15.7807C15.6766 15.4878 15.6766 15.0129 15.9695 14.72L17.0642 13.6253L16.0911 
								12.6522C15.5981 13.2305 15.0724 13.7947 14.5186 14.3247C14.0366 14.7861 13.5658 15.2053 13.1214 15.5612ZM16.6779 
								6.84121C14.8805 7.90754 12.7157 9.47121 11.047 11.2497C10.5466 11.783 10.1253 12.2783 9.80577 12.7143C9.67884 
								12.8875 9.57262 13.0451 9.4856 13.1868C9.83208 13.362 10.1715 13.6097 10.4969 13.9351C10.8487 14.2869 11.1096 
								14.6549 11.2863 15.0306C11.4607 14.9255 11.6592 14.7911 11.881 14.6251C12.3585 14.2677 12.9009 13.7967 13.4814 
								13.2411C15.2452 11.5529 16.7279 9.46536 17.7268 7.74193C18.1726 6.97269 18.5146 6.28884 18.7395 5.75853C18.1905 
								5.99918 17.4779 6.3666 16.6779 6.84121ZM6.26337 18.9943C6.37258 18.973 6.49004 18.9466 6.61435 18.915C7.14688 
								18.7797 7.75434 18.563 8.29141 18.3149C8.84806 18.0578 9.25081 17.8026 9.43629 17.6171C9.79233 17.2611 10.0259 
								16.8379 10.0667 16.4209C10.1044 16.0363 9.98992 15.5494 9.43629 14.9958C8.88266 14.4421 8.39576 14.3277 8.01121 
								14.3654C7.59417 14.4062 7.17101 14.6397 6.81497 14.9958C6.53058 15.2802 6.51575 15.6557 6.57006 16.5566L6.57254 
								16.5975C6.61212 17.2506 6.66538 18.1293 6.26337 18.9943ZM5.89058 19.6257C5.89034 19.6258 5.8914 19.6228 5.89452 
								19.6165C5.89239 19.6225 5.89083 19.6257 5.89058 19.6257Z">
							</path>
						</svg>
						DESIGN
					</button>
					<button onClick={() => handleNavClick(p3)} className={`hover:underline ${selected === p3 ? "underline" : ""} flex flex-row items-center gap-x-2`}>
						<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
							<path id="Shape" fill-rule="evenodd" clip-rule="evenodd"
								d="M6 8.5C6 6.567 7.567 5 9.5 5C11.433 5 13 6.567 13 8.5V9.5C13 11.433 11.433 13 9.5 13C7.567 
								13 6 11.433 6 9.5V8.5ZM9.5 6.5C8.39543 6.5 7.5 7.39543 7.5 8.5V9.5C7.5 10.6046 8.39543 11.5 9.5 
								11.5C10.6046 11.5 11.5 10.6046 11.5 9.5V8.5C11.5 7.39543 10.6046 6.5 9.5 6.5ZM7.38075 15.6637C8.03314 
								15.5572 8.70698 15.5 9.5 15.5C10.276 15.5 10.9549 15.5595 11.6125 15.6665C12.107 15.747 12.5 16.2099 12.5 
								16.8017V17.75C12.5 17.8881 12.3881 18 12.25 18H6.75C6.61193 18 6.5 17.8881 6.5 17.75V16.7954C6.5 16.2043 6.89094 
								15.7437 7.38075 15.6637ZM9.5 14C8.63009 14 7.87524 14.0631 7.13899 14.1833C5.83218 14.3967 5 15.566 5 16.7954V17.75C5 
								18.7165 5.7835 19.5 6.75 19.5H12.25C13.2165 19.5 14 18.7165 14 17.75V16.8017C14 15.5672 13.1616 14.3988 11.8534 14.186C11.1164 
								14.066 10.3569 14 9.5 14ZM15.3189 14.071C14.9064 14.033 14.5412 14.3365 14.5032 14.749C14.4651 15.1614 14.7686 15.5266 15.1811 
								15.5647C15.498 15.5939 15.8098 15.6326 16.1158 15.68C16.6088 15.7562 17 16.2123 17 16.8017V17.75C17 17.888 16.8881 18 16.75 
								18H15.25C14.8358 18 14.5 18.3358 14.5 18.75C14.5 19.1642 14.8358 19.5 15.25 19.5H16.75C17.7165 19.5 18.5 18.7165 18.5 
								17.75V16.8017C18.5 15.5648 17.657 14.4004 16.345 14.1976C16.0091 14.1456 15.6667 14.1031 15.3189 14.071ZM14.5 6C14.0858 6 
								13.75 6.33579 13.75 6.75C13.75 7.16421 14.0858 7.5 14.5 7.5C15.3284 7.5 16 8.17157 16 9V10C16 10.8284 15.3284 11.5 14.5 
								11.5C14.0858 11.5 13.75 11.8358 13.75 12.25C13.75 12.6642 14.0858 13 14.5 13C16.1569 13 17.5 11.6569 17.5 10V9C17.5 7.34315 
								16.1569 6 14.5 6Z">
							</path>
						</svg>
						COLLABORATE
					</button>
					<button onClick={() => handleNavClick(p4)} className={`hover:underline ${selected === p4 ? "underline" : ""} flex flex-row items-center gap-x-2`}>
						<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
							<path id="Union" fill-rule="evenodd" clip-rule="evenodd"
								d="M13.75 6.00049C14.1642 6.00049 14.5 6.33627 14.5 6.75049V14.2501C14.5 14.6643 14.1642 15.0001 
								13.75 15.0001C13.3358 15.0001 13 14.6643 13 14.2501V6.75049C13 6.33627 13.3358 6.00049 13.75 6.00049ZM5 
								17.2501C5 16.8359 5.33579 16.5001 5.75 16.5001H18.25C18.6642 16.5001 19 16.8359 19 17.2501C19 17.6643 
								18.6642 18.0001 18.25 18.0001H5.75C5.33579 18.0001 5 17.6643 5 17.2501ZM11 11.7501C11 11.3359 10.6642 
								11.0001 10.25 11.0001C9.83579 11.0001 9.5 11.3359 9.5 11.7501V14.2501C9.5 14.6643 9.83579 15.0001 10.25 
								15.0001C10.6642 15.0001 11 14.6643 11 14.2501V11.7501ZM17.25 8.0001C17.6642 8.0001 18 8.33588 18 
								8.7501V14.2501C18 14.6643 17.6642 15.0001 17.25 15.0001C16.8358 15.0001 16.5 14.6643 16.5 
								14.2501V8.7501C16.5 8.33588 16.8358 8.0001 17.25 8.0001ZM7.5 9.7501C7.5 9.33588 7.16421 9.0001 
								6.75 9.0001C6.33579 9.0001 6 9.33588 6 9.7501V14.2501C6 14.6643 6.33579 15.0001 6.75 15.0001C7.16421 
								15.0001 7.5 14.6643 7.5 14.2501V9.7501Z">
							</path>
						</svg>
						ANALYZE
					</button>
				</nav>
				<img src={imageSrc} alt="" className="mx-auto mt-8 max-h-[520px] min-h-[520px] rounded" />
			</div>
		</div>
	);
}

export default HeroineHome;
